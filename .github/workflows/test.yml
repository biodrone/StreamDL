name: "Pull Request Tests"

on:
  pull_request:
    branches: [ master, staging ]

jobs:
  Python_Tests:
    name: Python Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.11"]
        os: ["ubuntu-22.04", "ubuntu-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"
      - run: |
          python -m pip install poetry bandit
          python -m poetry install
          python -m poetry run bandit -ll -c .bandit.yml streamdl_proto_srv.py
  Go_Tests:
    name: Go Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        go-version: ["1.20", "1.21.1"]
        os: ["ubuntu-22.04", "ubuntu-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      # - uses: docker/setup-buildx-action@v2
      # - name: Build Local Server
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: "Dockerfile.server"
      #     tags: local_streamdl_server:latest
      #     load: true
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     push: false
      - run: |
          export STREAMDL_GRPC_PORT='50051'
          export STREAMDL_GRPC_ADDR='localhost'
          python -m pip install poetry bandit
          python -m poetry install
          python -m poetry run python streamdl_proto_srv.py &
          pid=$!
          # docker run local_streamdl_server:latest -e STREAMDL_GRPC_PORT='50051' -p 50051:50051 -d
          go test -v -count=1 ./...
          kill -9 $pid
  Docker_Tests:
    name: Docker Build Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-22.04", "ubuntu-latest"]
        component: ["client", "server"]
    steps:
      - uses: actions/checkout@v4
      - name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.${{ matrix.component }}
          platforms: linux/amd64
          load: true
          tags: dangeroustech/streamdl_${{ matrix.component }}:ci_test
