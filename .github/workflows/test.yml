name: Pull Request Tests

on:
  pull_request:
    branches: [master, staging]

permissions:
  contents: read

jobs:
  Software_Tests:
    name: Software Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.13", "3.14"]
        go-version: [1.22, 1.23]
        os: [ubuntu-22.04, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          allow-prereleases: true
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Deps and Run Tests
        run: |
          # Install Python Deps
          python -m pip install poetry bandit
          python -m poetry install
          # Run Python Tests
          python -m poetry run bandit -ll -c .bandit.yml streamdl_proto_srv.py
          python -m poetry run python streamdl_proto_srv.py &
          # Run Go Tests
          go test -v -count=1 ./...
        env:
          STREAMDL_GRPC_PORT: "50051"
          STREAMDL_GRPC_ADDR: localhost
  Docker_Tests:
    name: Docker Build Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        component: [client, server]
    steps:
      - uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Build and Push Unstable
        id: docker_build_push_unstable
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.${{ matrix.component }}
          platforms: linux/amd64
          push: true
          tags: dangeroustech/streamdl:${{ matrix.component }}_unstable
