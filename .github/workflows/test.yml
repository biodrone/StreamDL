name: "Pull Request Tests"

on:
  pull_request:
    branches: [ master, staging ]

jobs:
  Software_Test:
    name: Software Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]
        os: ["ubuntu-20.04", "ubuntu-latest"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"
      - run: |
          python -m pip install poetry bandit
          python -m poetry install
          python -m poetry run bandit -ll -c .bandit.yml streamdl_proto_srv.py
  Docker_Test:
    name: Docker Build Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-20.04", "ubuntu-latest"]
        component: ["client", "server"]
    steps:
      - uses: actions/checkout@v2
      - name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.${{ matrix.component }}
          platforms: linux/amd64
          load: true
          tags: dangeroustech/streamdl_${{ matrix.component }}:ci_test
